2. State in React

State is a way to store and manage data within a component. Unlike props, state is mutable and can be changed by the component itself using the useState hook.

Example of State:
// Parent Component (App.js)
import React, { useState } from 'react';

function App() {
  // useState hook to manage state
  const [count, setCount] = useState(0);

  // Function to increment count
  const incrementCount = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <h1>State Example</h1>
      <p>Current Count: {count}</p>
      <button onClick={incrementCount}>Increment</button>
    </div>
  );
}

export default App;

Explanation:
useState is used to create a count state, which initially holds the value 0.
setCount is the function used to update the count state.
When the button is clicked, the incrementCount function is called, updating the state and causing the component to re-render with the new value.
